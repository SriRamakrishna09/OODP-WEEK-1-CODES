Problem Statement:
A library management system has two classes: Book and Library.
The Book class has private data members: bookName and price.
The Library class has a function book_price() which needs to access these private members.
Use a friend function to achieve this.
________________________________________
Why Friend Functions Are Needed:
In C++, private members of a class cannot be accessed directly from another class.
To allow specific external functions or classes to access private members, we use friend functions.
In this case, since Library::book_price() needs access to Bookâ€™s private members (bookName, price), we declare it as a friend function inside the Book class.
________________________________________
C++ Program Using Friend Function:
#include <iostream>
#include <string>
using namespace std;

class Book {
private:
    string bookName;
    float price;

public:
    Book(string name, float p) : bookName(name), price(p) {}

    // Declare Library::book_price as a friend function
    friend void Library::book_price(const Book&);
};

class Library {
public:
    void book_price(const Book& b) {
        // Accessing private members of Book
        cout << "Book Name: " << b.bookName << endl;
        cout << "Price: $" << b.price << endl;
    }
};

int main() {
    Book b("C++ Programming", 499.99);
    Library lib;
    lib.book_price(b);
    return 0;
}
